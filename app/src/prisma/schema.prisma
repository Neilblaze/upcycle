// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model user {
    id                      String           @id @default(auto()) @map("_id") @db.ObjectId
    name                    String
    picture                 String
    email                   String           @unique
    created_time            DateTime         @default(now())
    last_token_generated_at DateTime         @default(now())
    listing_id              String?
    listing                 listing?
    listing_review          listing_review[]
    chat_metadata           chat_metadata[]
}

model potential_provider {
    id         String @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    email      String @unique
    phone      String
    address    String
    why_join   String
    experience String
}

model listing {
    id             String              @id @default(auto()) @map("_id") @db.ObjectId
    listing_name   String
    categories     String[]
    address        String
    picture_url    String
    projects       listings_projects[]
    admin          user                @relation(fields: [adminId], references: [id])
    adminId        String              @unique @db.ObjectId
    listing_review listing_review[]
    total_rating   Int                 @default(0)
    review_count   Int                 @default(0)
    chat_metadata  chat_metadata[]
}

model listings_projects {
    id         String  @id @default(auto()) @map("_id") @db.ObjectId
    listing    listing @relation(fields: [listingId], references: [id])
    listingId  String  @db.ObjectId
    asset_url  String
    short_desc String
}

model listing_review {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    rating       Int
    review_txt   String
    submitted_at DateTime @default(now())

    listing listing @relation(fields: [listingId], references: [id])
    user    user    @relation(fields: [userId], references: [id])

    listingId String @db.ObjectId
    userId    String @db.ObjectId

    // for now removing it.
    // @@unique([listingId, userId])
}

model chat_metadata {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    listing listing @relation(fields: [listingId], references: [id])
    user    user    @relation(fields: [userId], references: [id])
    started_at DateTime @default(now())

    listingId String @db.ObjectId
    userId    String @db.ObjectId

    @@unique([listingId, userId])
}
